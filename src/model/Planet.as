package model {		public class Planet {		public var x: Number;		public var y: Number;		public var radius: Number;		public var orbit: Number;		public var gravity: Number;		private var bounce: Number;		public function Planet(x: Number, y: Number, radius: Number, orbit: Number, gravity: Number) {			this.x = x;			this.y = y;			this.radius = radius;			this.orbit = orbit;			this.gravity = gravity;			this.bounce = 0.9 + Math.random() * 0.1;		}				public function updateTarget(target: Ball): void {			var dist: Number = Math.pow(this.x - target.x, 2) + Math.pow(this.y - target.y, 2);				if (dist < Math.pow(this.orbit, 2)) {				var angle = Math.atan2(target.y - this.y, target.x - this.x);								if (dist < Math.pow(this.radius, 2)) {					var reflectionAngle = angle - Math.PI / 2;					var targetAngle = Math.atan2(target.yVelocity, target.xVelocity);					var targetVelocity = Math.sqrt(Math.pow(target.xVelocity, 2) + Math.pow(target.yVelocity, 2));					var adjustedTargetAngle = targetAngle - reflectionAngle;					var reflectionTargetAngle = -adjustedTargetAngle;					var finalAngle = reflectionTargetAngle + reflectionAngle;										target.xVelocity = targetVelocity * this.bounce * Math.cos(finalAngle);					target.yVelocity = targetVelocity * this.bounce * Math.sin(finalAngle);										target.x = this.x + Math.cos(-angle) * (this.radius);					target.y = this.y + Math.sin(angle) * (this.radius);				}				var xDelta = Math.cos(angle) * this.gravity;				var yDelta = Math.sin(angle) * this.gravity;								target.xVelocity = target.xVelocity - xDelta;				target.yVelocity = target.yVelocity - yDelta;			}		}	}	}